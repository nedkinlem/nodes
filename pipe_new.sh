#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
echo "üìÇ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω–æ –∑ –ø–∞–ø–∫–∏: $SCRIPT_DIR"

# ========== –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ==========
install_dependencies() {
  echo "üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."

  sudo apt update -y && sudo apt upgrade -y
  sudo apt install lsof wget make tar screen nano unzip lz4 git jq ufw -y

  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ OpenSSL 3 (libssl.so.3)
  if ! ldconfig -p | grep -q "libssl.so.3"; then
    echo "‚ö†Ô∏è –í—ñ–¥—Å—É—Ç–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ libssl3. –í—Å—Ç–∞–Ω–æ–≤–ª—é—é..."
    if sudo apt install libssl3 -y; then
      echo "‚úÖ libssl3 —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞."
    else
      echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ libssl3. –ú–æ–∂–ª–∏–≤–æ, —É –≤–∞—Å —Å—Ç–∞—Ä–∞ –≤–µ—Ä—Å—ñ—è Ubuntu."
      echo "–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å–∏—Å—Ç–µ–º—É –∞–±–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ libssl1.1 —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∏–º–ª—ñ–Ω–∫."
      sudo apt install libssl1.1 -y && \
      sudo ln -sf /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /usr/lib/x86_64-linux-gnu/libssl.so.3
    fi
  else
    echo "‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ."
  fi
}

# ========== –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–¥–∏ ==========
install_node() {
  echo 'üöÄ –ü–æ—á–∏–Ω–∞—é –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–¥–∏...'

  cd $HOME || exit

  # –û—á–∏—Å—Ç–∫–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —Ñ–∞–π–ª—ñ–≤
  if [ -f "$HOME/pop" ]; then
    sudo systemctl stop pipe 2>/dev/null
    sudo systemctl disable pipe 2>/dev/null
    sudo rm -rf download_cache pop node_info.json
    sudo rm -f /etc/systemd/system/pipe.service
    sudo systemctl daemon-reload
  fi

  # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
  install_dependencies

  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤
  ports=(8003)
  for port in "${ports[@]}"; do
    if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
      echo "‚ùå –ü–æ–º–∏–ª–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–π–Ω—è—Ç–∏–π. –ó–∞–≤–µ—Ä—à—É—é –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è."
      exit 1
    fi
  done

  # –ó–∞–ø–∏—Ç —Ä–µ—Å—É—Ä—Å—ñ–≤
  while true; do
    read -p "–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—ó –ø–∞–º‚Äô—è—Ç—ñ (RAM, –º—ñ–Ω—ñ–º—É–º 4): " RAM
    if [[ "$RAM" =~ ^[0-9]+$ ]] && [ "$RAM" -ge 4 ]; then
      break
    else
      echo "RAM –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–º —ñ ‚â• 4."
    fi
  done

  while true; do
    read -p "–í–≤–µ–¥—ñ—Ç—å –æ–±—Å—è–≥ –º—ñ—Å—Ü—è –Ω–∞ –¥–∏—Å–∫—É (–º—ñ–Ω—ñ–º—É–º 100–ì–ë): " DISK_SPACE
    if [[ "$DISK_SPACE" =~ ^[0-9]+$ ]] && [ "$DISK_SPACE" -ge 100 ]; then
      break
    else
      echo "–î–∏—Å–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º —ñ ‚â• 100–ì–ë."
    fi
  done

  while true; do
    read -p "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É SOL –∞–¥—Ä–µ—Å—É (–ù–ï –ü–†–ò–í–ê–¢–ù–ò–ô –ö–õ–Æ–ß): " SOLADDRESS
    if [ -n "$SOLADDRESS" ]; then
      break
    else
      echo "–ê–¥—Ä–µ—Å–∞ Solana –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ—é."
    fi
  done

  # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è pop
  wget -O pop "https://dl.pipecdn.app/v0.2.8/pop"
  chmod +x pop
  mkdir -p download_cache
  sudo ufw allow 8003/tcp

  # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–∏–Ω–Ω–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  sudo ./pop  --ram ${RAM}   --max-disk ${DISK_SPACE}  --cache-dir $HOME/download_cache --pubKey ${SOLADDRESS} --signup-by-referral-route a8c5923e9548ca3d

  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è systemd —Å–µ—Ä–≤—ñ—Å—É
  sudo tee /etc/systemd/system/pipe.service > /dev/null << EOF
[Unit]
Description=Pipe Node Service
After=network.target
Wants=network-online.target

[Service]
User=$(whoami)
Group=$(whoami)
WorkingDirectory=$HOME
ExecStart=$HOME/pop \\
    --ram ${RAM} \\
    --max-disk ${DISK_SPACE} \\
    --cache-dir $HOME/download_cache \\
    --pubKey ${SOLADDRESS}
Restart=always
RestartSec=5
LimitNOFILE=65536
LimitNPROC=4096
StandardOutput=journal
StandardError=journal
SyslogIdentifier=pipe-node

[Install]
WantedBy=multi-user.target
EOF

  sudo systemctl daemon-reload
  sudo systemctl enable pipe
  sudo systemctl start pipe

  echo "‚úÖ –ù–æ–¥–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
}

# ========== –Ü–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó ==========
check_logs() {
  echo "üìú –ü–æ–∫–∞–∑—É—é –æ—Å—Ç–∞–Ω–Ω—ñ 40 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤..."
  journalctl -u pipe -n 40 --output=short
}

check_node_status() {
  echo "üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –Ω–æ–¥–∏..."
  ./pop --status
}

display_node_info() {
  echo "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–æ–¥—É..."
  if [ -f $HOME/node_info.json ]; then
    cat $HOME/node_info.json
  else
    echo "‚ö†Ô∏è –§–∞–π–ª node_info.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
  fi
}

restart_node() {
  echo "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥–∏..."
  sudo systemctl daemon-reload
  sudo systemctl restart pipe
  echo "‚úÖ Pipe –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞."
}

stop_node() {
  echo "‚õî –ó—É–ø–∏–Ω–∫–∞ –Ω–æ–¥–∏..."
  sudo systemctl stop pipe
  echo "‚úÖ Pipe –∑—É–ø–∏–Ω–µ–Ω–∞."
}

delete_node() {
  echo "üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–¥–∏..."
  sudo systemctl stop pipe 2>/dev/null
  sudo systemctl disable pipe 2>/dev/null
  sudo rm -rf download_cache pop node_info.json
  sudo rm -f /etc/systemd/system/pipe.service
  sudo systemctl daemon-reload
  echo "‚úÖ –ù–æ–¥–∞ –≤–∏–¥–∞–ª–µ–Ω–∞."
}

show_node_logs() {
  echo "üì° Live –ª–æ–≥–∏ (Ctrl+C –¥–ª—è –≤–∏—Ö–æ–¥—É)..."
  journalctl -u pipe -f
}

exit_script() {
  echo "üëã –í–∏—Ö—ñ–¥..."
  exit 0
}

# ========== –ú–µ–Ω—é ==========
while true; do
  echo -e "\\n–ú–µ–Ω—é:"
  echo "1. üõ† –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É"
  echo "2. üìÑ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏ (–æ—Å—Ç–∞–Ω–Ω—ñ 40 —Ä—è–¥–∫—ñ–≤)"
  echo "3. üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –Ω–æ–¥–∏"
  echo "4. ‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–æ–¥—É"
  echo "5. üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É"
  echo "6. ‚õî –ó—É–ø–∏–Ω–∏—Ç–∏ –Ω–æ–¥—É"
  echo "7. üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É"
  echo "8. üìò –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ live-–ª–æ–≥–∏"
  echo "9. üö™ –í–∏–π—Ç–∏"
  read -p "–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
    1) install_node ;;
    2) check_logs ;;
    3) check_node_status ;;
    4) display_node_info ;;
    5) restart_node ;;
    6) stop_node ;;
    7) delete_node ;;
    8) show_node_logs ;;
    9) exit_script ;;
    *) echo "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø—É–Ω–∫—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." ;;
  esac
done
