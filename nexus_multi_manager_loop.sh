
#!/bin/bash

NEXUS_IMAGE="nexusxyz/nexus-cli:latest"

function check_docker {
    if ! command -v docker &>/dev/null; then
        echo -e "\nüì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Docker..."
        sudo apt update && sudo apt install -y docker.io
    fi
}

function check_screen {
    if ! command -v screen &>/dev/null; then
        echo -e "\nüì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è screen..."
        sudo apt update && sudo apt install -y screen
    fi
}

function install_node {
    read -p "üîë –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    echo -e "\nüì¶ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏..."
    sudo apt update && sudo apt upgrade -y

    check_docker
    check_screen

    echo -e "\nüì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Nexus –æ–±—Ä–∞–∑—É..."
    docker pull $NEXUS_IMAGE

    echo -e "\nüñ•Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –Ω–æ–¥–∏ $NODE_ID..."
    docker run -dit --restart unless-stopped --name $CONTAINER_NAME $NEXUS_IMAGE start --node-id $NODE_ID

    echo -e "\n‚úÖ –ù–æ–¥–∞ $NODE_ID –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ!"
}

function update_node {
    read -p "üîë –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    check_docker

    echo -e "\nüì• –û–Ω–æ–≤–ª–µ–Ω–Ω—è Nexus –æ–±—Ä–∞–∑—É..."
    docker pull $NEXUS_IMAGE

    echo -e "\nüõë –ó—É–ø–∏–Ω–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CONTAINER_NAME..."
    docker rm -f $CONTAINER_NAME >/dev/null 2>&1

    echo -e "\nüöÄ –ó–∞–ø—É—Å–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ—ó –Ω–æ–¥–∏ $NODE_ID..."
    docker run -dit --restart unless-stopped --name $CONTAINER_NAME $NEXUS_IMAGE start --node-id $NODE_ID
}

function show_logs {
    read -p "üîë –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    echo -e "\nüìÑ –û—Å—Ç–∞–Ω–Ω—ñ 50 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤ –¥–ª—è –Ω–æ–¥–∏ $NODE_ID..."
    if docker ps -a | grep -q "$CONTAINER_NAME"; then
        docker logs --tail 50 $CONTAINER_NAME
    else
        echo -e "\n‚ùå –ù–æ–¥—É $NODE_ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–æ–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞."
    fi
    echo -e "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é..."
    read
}

function delete_node {
    read -p "üîë –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    echo -e "\nüóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–æ–¥–∏ $NODE_ID..."
    docker rm -f $CONTAINER_NAME >/dev/null 2>&1
    echo -e "‚úÖ –ù–æ–¥—É $NODE_ID –≤–∏–¥–∞–ª–µ–Ω–æ!"
    sleep 2
}

function start_node {
    read -p "üîë –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    echo -e "\nüöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–¥–∏ $NODE_ID..."
    if docker ps -a | grep -q "$CONTAINER_NAME"; then
        docker start -ai $CONTAINER_NAME
    else
        docker run -dit --restart unless-stopped --name $CONTAINER_NAME $NEXUS_IMAGE start --node-id $NODE_ID
    fi
}

function list_nodes {
    echo -e "\nüìã –°–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–∏—Ö –Ω–æ–¥:"
    docker ps --format "table {{.Names}}\t{{.Status}}" | grep nexus_ || echo "‚ùå –ù–µ–º–∞—î –∑–∞–ø—É—â–µ–Ω–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ Nexus"
    echo -e "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é..."
    read
}

function check_version {
    echo -e "\nüîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ—Ä—Å—ñ—ó Nexus CLI..."
    docker run --rm $NEXUS_IMAGE --version || echo "‚ö†Ô∏è –ù–µ–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤–µ—Ä—Å—ñ—é CLI —É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ."
}

function make_swap {
    echo -e "\nüíæ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è SWAP (8G)..."
    sudo fallocate -l 8G /swapfile
    sudo chmod 600 /swapfile
    sudo mkswap /swapfile
    sudo swapon /swapfile
    echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
    echo -e "‚úÖ SWAP –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!"
    sleep 2
}


function setup_loop_mode {
    read -p "üîÅ –í–≤–µ–¥—ñ—Ç—å –≤–∞—à NODE ID –¥–ª—è loop-—Ä–µ–∂–∏–º—É: " NODE_ID
    WORKDIR=~/nexus_loop_build_$NODE_ID
    CONTAINER_NAME=nexus_$NODE_ID

    echo -e "\nüìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: $WORKDIR"
    mkdir -p "$WORKDIR" && cd "$WORKDIR"

    echo -e "\nüìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è loop.sh"
    cat <<EOF > loop.sh
#!/bin/bash
echo "üîÅ Nexus loop-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ (ID: \$NODE_ID)"
while true; do
  echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ CLI..."
  ./nexus-network start --node-id "\$NODE_ID"
  echo "üïê –û—á—ñ–∫—É–≤–∞–Ω–Ω—è 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º –∑–∞–ø—É—Å–∫–æ–º..."
  sleep 30
done
EOF

    chmod +x loop.sh

    echo -e "\nüìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Dockerfile"
    cat <<EOF > Dockerfile
FROM nexusxyz/nexus-cli:latest
COPY loop.sh /loop.sh
RUN chmod +x /loop.sh
CMD ["/loop.sh"]
EOF

    echo -e "\nüèóÔ∏è  –ó–±—ñ—Ä Docker-–æ–±—Ä–∞–∑—É: nexus-loop-cli-\$NODE_ID"
    docker build -t nexus-loop-cli-\$NODE_ID .

    echo -e "\nüßπ –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—è–∫—â–æ –±—É–≤)..."
    docker rm -f \$CONTAINER_NAME >/dev/null 2>&1

    echo -e "\nüöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ loop-—Ä–µ–∂–∏–º—ñ..."
    docker run -dit \
      --restart unless-stopped \
      --name \$CONTAINER_NAME \
      -e NODE_ID=\$NODE_ID \
      nexus-loop-cli-\$NODE_ID

    echo -e "\n‚úÖ –ù–æ–¥–∞ \$NODE_ID –ø—Ä–∞—Ü—é—î –≤ loop-—Ä–µ–∂–∏–º—ñ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ \$CONTAINER_NAME"
    echo -e "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é..."
    read
}

function diagnose_node {
    read -p "üîç –í–≤–µ–¥—ñ—Ç—å –≤–∞—à node ID: " NODE_ID
    CONTAINER_NAME="nexus_${NODE_ID}"

    echo -e "\nüß™ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–æ–¥–∏ $NODE_ID:"

    echo -e "\nüì§ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker ps -a --filter "name=$CONTAINER_NAME"

    echo -e "\nüìú –û—Å—Ç–∞–Ω–Ω—ñ 50 —Ä—è–¥–∫—ñ–≤ –ª–æ–≥—ñ–≤:"
    docker logs --tail 50 $CONTAINER_NAME 2>/dev/null || echo "‚ùå –ù–µ–º–∞—î –ª–æ–≥—ñ–≤ –∞–±–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."

    echo -e "\n‚ùó Exit code:"
    docker inspect $CONTAINER_NAME --format='ExitCode: {{.State.ExitCode}}' 2>/dev/null || echo "N/A"

    echo -e "\n‚ùó –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É (—è–∫—â–æ –±—É–ª–∞):"
    docker inspect $CONTAINER_NAME --format='Error: {{.State.Error}}' 2>/dev/null || echo "N/A"

    echo -e "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é..."
    read
}

while true; do
    clear
    echo "==== Nexus Node Manager (–º—É–ª—å—Ç–∏-–Ω–æ–¥–∏ –∑ –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º + SWAP + –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞) ===="
    echo "1) üü¢ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤—É –Ω–æ–¥—É"
    echo "2) üîÑ –û–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É"
    echo "3) üìÑ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏"
    echo "4) üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–¥—É"
    echo "5) ‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–æ–¥—É"
    echo "6) üìã –°–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–∏—Ö –Ω–æ–¥"
    echo "7) üîé –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤–µ—Ä—Å—ñ—é CLI"
    echo "8) üíæ –£–≤—ñ–º–∫–Ω—É—Ç–∏ SWAP"
    echo "9) üß™ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–æ–¥–∏"
    echo "10) üîÅ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–¥—É –≤ loop-—Ä–µ–∂–∏–º—ñ"
    echo "11) ‚ùå –í–∏–π—Ç–∏"
    echo "------------------------------------------------------------------------"
    read -p "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: " choice

    case $choice in
        1) install_node ;;
        2) update_node ;;
        3) show_logs ;;
        4) delete_node ;;
        5) start_node ;;
        6) list_nodes ;;
        7) check_version ;;
        8) make_swap ;;
        9) diagnose_node ;;
        10) setup_loop_mode ;;
        11) echo "üëã –í–∏—Ö—ñ–¥..."; exit 0 ;;
        *) echo "‚ùó –ù–µ–≤—ñ—Ä–Ω–∞ –æ–ø—Ü—ñ—è!"; sleep 2 ;;
    esac
done
